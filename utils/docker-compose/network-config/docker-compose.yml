#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#

# Environment Variables that need to be set to use this file
#
#   COMPOSE_PROJECT_NAME - This is used to ensure all chaincode containers are running on the same network
#                          as the peers, orderer, and ca. The only requirement is that this is set to
#                          some string and cannot be left blank. To match with the scripts use `fabric-fpc`.
#   FABRIC_VERSION       - This is the version of fabric being used that should match with an image tag
#                          for hyperledger/fabric-orderer. Recommended value is `1.4.3`.
#   FPC_CONFIG           - Set this to `-fpc` to bring up a network using FPC Peers. Leaving it unset
#                          will cause the network to use the hyperledger/fabric-peer:latest images
#   PEER_CMD             - This variable indicates which peer binary should be used to start the peer.
#                          If regular peers are desired set this value to `peer`, if FPC peers are
#                          desired set this value to
#                          `/project/src/github.com/hyperledger-labs/fabric-private-chaincode/fabric/bin/peer.sh`
#
#
#
version: '2.1'

networks:
  basic:

services:
  ca.org1.example.com:
    extends:
      file: base/base.yaml
      service: ca-base
    container_name: ca.org1.example.com
    ports:
      - "7054:7054"
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - basic

  orderer0.example.com:
    container_name: orderer0.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com
  orderer1.example.com:
    container_name: orderer1.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7150:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com
  orderer2.example.com:
    container_name: orderer2.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7250:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com
  orderer3.example.com:
    container_name: orderer3.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7350:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com
  orderer4.example.com:
    container_name: orderer4.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7450:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com
  orderer5.example.com:
    container_name: orderer5.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7550:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com
  orderer6.example.com:
    container_name: orderer6.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/${CHANNEL_NAME}.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7650:7050
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/config/:/etc/hyperledger/configtx
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer6.example.com/:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peerOrg1
      - ${DOCKERD_NETWORK_CONFIG}/orderer.yaml:/etc/hyperledger/fabric/orderer.yaml
    networks:
      - basic
    depends_on:
      - ca.org1.example.com

  peer0.org1.example.com:
    extends:
      file: base/base.yaml
      service: peer-base
    image: hyperledger/fabric-peer-fpc-hw:${FPC_VERSION}
    container_name: peer0.org1.example.com
    environment:
      - SGX_MODE=HW
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_LOCALMSPID=Org1
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_ENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
      # we set here credentials to admin, so we don't have to explicitly have to set
      # it in 'docker exec' so we can run ${PEER_CMD}. It means, though, that the peer
      # also will run with admin and not peer credentials. If that gives problems, e.g.,
      # because of role-specific endorsement policies, you will have to comment below
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/msp
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/peer/msp
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/tls
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/core${FPC_CONFIG}.yaml:/etc/hyperledger/fabric/core.yaml
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - orderer3.example.com
      - orderer4.example.com
      - orderer5.example.com
      - orderer6.example.com
    networks:
      - basic

  peer1.org1.example.com:
    extends:
      file: base/base.yaml
      service: peer-base
    image: hyperledger/fabric-peer-fpc-hw:${FPC_VERSION}
    container_name: peer1.org1.example.com
    environment:
      - SGX_MODE=HW
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_PEER_LOCALMSPID=Org1
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      # we set here credentials to admin, so we don't have to explicitly have to set
      # it in 'docker exec' so we can run ${PEER_CMD}. It means, though, that the peer
      # also will run with admin and not peer credentials. If that gives problems, e.g.,
      # because of role-specific endorsement policies, you will have to comment below
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/peer/msp
    ports:
      - 7061:7051
      - 7063:7053
    volumes:
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com:/etc/hyperledger/peer
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/tls
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/etc/hyperledger/msp/orderer
      - ${DOCKERD_NETWORK_CONFIG}/core${FPC_CONFIG}.yaml:/etc/hyperledger/fabric/core.yaml
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - orderer3.example.com
      - orderer4.example.com
      - orderer5.example.com
      - orderer6.example.com
    networks:
      - basic

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=info
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ${DOCKERD_NETWORK_CONFIG}/config:/etc/hyperledger/configtx
      - ${DOCKERD_FPC_PATH}/examples:/project/src/github.com/hyperledger-labs/fabric-private-chaincode/examples
      - ${DOCKERD_FPC_PATH}/demo:/project/src/github.com/hyperledger-labs/fabric-private-chaincode/demo
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config:/etc/hyperledger/crypto-config
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/peerOrganizations/org1.example.com/users:/etc/hyperledger/msp/users
      - ${DOCKERD_NETWORK_CONFIG}/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/etc/hyperledger/msp/orderer
    networks:
      - basic
    depends_on:
     - peer0.org1.example.com
     # - couchdb
